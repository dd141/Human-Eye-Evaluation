/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JLabel;

/**
 *
 * @author Brahmi
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form HomePage
     */
    
        static int Age=2;
    static int Spectacle_prescription=2;
    static int Astigmatic=1;
    static int Tear_production_rate=2;
  
     static List<Integer>ageCountList=new ArrayList<Integer>();
    static List<Integer> spectacle_prescriptionCountList=new ArrayList<Integer>();
    static List<Integer> Astigmatic_List=new ArrayList<Integer>();
     static List<Integer> Tear_production_rate_List=new ArrayList<Integer>();
    
    //Data Arrays
     static List<String>ageData=new ArrayList<String>();
     static List<String>spectacle_prescription_data=new ArrayList<String>();
     static List<String>astigmatic_data=new ArrayList<String>();
     static List<String>tear_production_rate_data=new ArrayList<String>();
     static List<String>result_set_data=new ArrayList<String>();
     
    static List<Double>ResultIs=new ArrayList<>();
    public HomePage() {
        initComponents();
        ageSelect.addItem("Young");
        ageSelect.addItem("Pre-presbyopic");
        ageSelect.addItem("Presbyopic");
        
        resultText.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ageSelect = new javax.swing.JComboBox<>();
        spectacle_select = new javax.swing.JComboBox<>();
        astigmatic_select = new javax.swing.JComboBox<>();
        tear_production_Select = new javax.swing.JComboBox<>();
        SubmitBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        resultText = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ageSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ageSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageSelectActionPerformed(evt);
            }
        });

        spectacle_select.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        spectacle_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Myope", "Hypermetrope" }));

        astigmatic_select.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        astigmatic_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No", "Yes" }));

        tear_production_Select.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tear_production_Select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Reduced", "Normal" }));

        SubmitBtn.setText("Submit");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Age of the patient");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Spectacle prescription");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Astigmatic");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("tear production rate");

        resultText.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        resultText.setText("Result:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Evalution of Human Eye Contact Lens");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ageSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(astigmatic_select, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spectacle_select, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tear_production_Select, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(resultText, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(216, 216, 216))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(393, 393, 393))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ageSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(spectacle_select, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(astigmatic_select, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tear_production_Select, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(SubmitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(resultText, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ageSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageSelectActionPerformed

    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed
        // TODO add your handling code here:
        
         Age=ageSelect.getSelectedIndex()+1;
        Spectacle_prescription=spectacle_select.getSelectedIndex()+1;
        Astigmatic=astigmatic_select.getSelectedIndex()+1;
        Tear_production_rate=tear_production_Select.getSelectedIndex()+1;
        
        System.out.println(Age);
        ageCountList.clear();
        spectacle_prescriptionCountList.clear();
        Astigmatic_List.clear();
        Tear_production_rate_List.clear();
        ageData.clear();
        spectacle_prescription_data.clear();
        astigmatic_data.clear();
        tear_production_rate_data.clear();
                result_set_data.clear();
                ResultIs.clear();
         ReadDataFromFile();
        String result=NaiveBayesClassfier();
        resultText.setText("Result: "+result);
        
    }//GEN-LAST:event_SubmitBtnActionPerformed

     public static void ReadDataFromFile()
    {

         String csvFile = "C:\users\SUNNY\Desktop\AIproj\lens.csv";
        BufferedReader br = null;
        String line = "";
        String cvsSplitBy = ",";

        try {

            br = new BufferedReader(new FileReader(csvFile));
            while ((line = br.readLine()) != null) {

                // use comma as separator
                String[] TempValue = line.split(cvsSplitBy);
                 ageData.add(TempValue[1]);
                int count=0;
                //                ageData.add(TempValue[1]);
                spectacle_prescription_data.add(TempValue[2]);
                astigmatic_data.add(TempValue[3]);
                tear_production_rate_data.add(TempValue[4]);
                result_set_data.add(TempValue[5]);
                  
          // NaiveBayesClassfier();
            }
              
                 
                 
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (br != null) {
                try {
                    br.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        GettingRecordValue();
       // NaiveBayesClassfier();
      
        
    }
    
    public static void GettingRecordValue()
    {
         int flag=0;
            int count=0;
            for(int i=1;i<=3;i++)
            {
                count=0;
                for(int j=0;j<24;j++)
                {
                    if(Integer.parseInt(ageData.get(j))==Age&&Integer.parseInt(result_set_data.get(j))==i)
                    {
                        count++;
                    }
                }
                ageCountList.add(count);
            }
            
            System.out.println("Age Count List:"+ageCountList);
            
            
           
            for(int i=1;i<=3;i++)
            {
                count=0;
                for(int j=0;j<24;j++)
                {
                    if(Integer.parseInt(spectacle_prescription_data.get(j))==Spectacle_prescription&&Integer.parseInt(result_set_data.get(j))==i)
                    {
                        count++;
                    }
                }
                spectacle_prescriptionCountList.add(count);
            }
            
            System.out.println("spectacle_prescriptionCountList:"+spectacle_prescriptionCountList);
            
            for(int i=1;i<=3;i++)
            {
                count=0;
                for(int j=0;j<24;j++)
                {
                    if(Integer.parseInt(astigmatic_data.get(j))==Astigmatic&&Integer.parseInt(result_set_data.get(j))==i)
                    {
                        count++;
                    }
                }
                Astigmatic_List.add(count);
            }
            
            System.out.println("Astigmatic_List:"+Astigmatic_List);
            
            for(int i=1;i<=3;i++)
            {
                count=0;
                for(int j=0;j<24;j++)
                {
                    if(Integer.parseInt(tear_production_rate_data.get(j))==Tear_production_rate&&Integer.parseInt(result_set_data.get(j))==i)
                    {
                        count++;
                    }
                }
                Tear_production_rate_List.add(count);
            }
            
            System.out.println("TearProduction Rate:"+Tear_production_rate_List);
            
            
            
    }
    
    public static String NaiveBayesClassfier()
    {
           //Calculating Final Result For HardContactLens
        double sum=0;
        sum=(ageCountList.get(0)/4.0)*(spectacle_prescriptionCountList.get(0)/4.0)
                *(Astigmatic_List.get(0)/4.0)*(Tear_production_rate_List.get(0)/4.0);  
        ResultIs.add(sum);
        sum=0;
        sum=(ageCountList.get(1)/5.0)*(spectacle_prescriptionCountList.get(1)/5.0)
                *(Astigmatic_List.get(1)/5.0)*(Tear_production_rate_List.get(1)/5.0);  
        ResultIs.add(sum);
        sum=0;
        sum=(ageCountList.get(2)/15.0)*(spectacle_prescriptionCountList.get(2)/15.0)
                *(Astigmatic_List.get(2)/15.0)*(Tear_production_rate_List.get(2)/15.0);  
        ResultIs.add(sum);
        
        
        System.out.println(ResultIs);
        
        double max=0;
        int flag=0;
        for(int i=0;i<3;i++)
        {
            if(ResultIs.get(i)>max)
            {
                max=ResultIs.get(i);
                flag=i;
            }
        }
       
        String resultClass="";
        if(flag==0)
        {
            System.out.println("The patient should be fitted with hard contact lenses");
           resultClass="The patient should be fitted with hard contact lenses";
          
        }
        else if(flag==1)
        {
            System.out.println("The patient should be fitted with soft contact lenses");
         resultClass="The patient should be fitted with soft contact lenses";
        }
        else
        {
            System.out.println("The patient should not be fitted with contact lenses.");
            resultClass="The patient should not be fitted with contact lenses.";
        }
       return resultClass;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SubmitBtn;
    private javax.swing.JComboBox<String> ageSelect;
    private javax.swing.JComboBox<String> astigmatic_select;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel resultText;
    private javax.swing.JComboBox<String> spectacle_select;
    private javax.swing.JComboBox<String> tear_production_Select;
    // End of variables declaration//GEN-END:variables
}
